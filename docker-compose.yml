services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - app-network
    restart: unless-stopped

  db:
    build:
      context: .
      dockerfile: Dockerfile.postgis
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  migrate:
    image: migrate/migrate:v4.17.0
    command:
      [
        "-path", "/migrations",
        "-database", "${DB_DSN}",
        "up"
      ]
    volumes:
      - ./migrations:/migrations
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:
    name: pg_data_volume
  redis_data:
    name: redis_data_volume

networks:
  app-network:
    driver: bridge
